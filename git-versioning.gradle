def versioningExecuteCommand = { cmd ->
    def stdout = new ByteArrayOutputStream()
    def stderr = new ByteArrayOutputStream()
    try {
        exec {
            commandLine cmd
            standardOutput = stdout
            errorOutput = stderr
        }
        return stdout.toString().trim().replaceAll("\"", "")
    } catch (ignored) {
        println(ignored.toString())
        return ""
    }
}

ext {
    versioning = [
            lng: versioningExecuteCommand(['git', 'for-each-ref', '--format="%(refname:short)"', '--sort=-authordate', '--count=1', 'refs/tags']),
            branch: versioningExecuteCommand(['git', 'rev-parse', '--abbrev-ref', 'HEAD']),
            tag: versioningExecuteCommand(['git', 'tag']),
            describe: versioningExecuteCommand(['git', 'describe', '--tags']),
            commit: versioningExecuteCommand(['git', 'rev-parse', '--short', 'HEAD']),

    ]
}

task versioningPrintVersion() {
    println("Long: $versioning.lng")
    println("Branch: $versioning.branch")
    println("Tag: $versioning.tag")
    println("Describe: $versioning.describe")
    println("Commit: $versioning.commit")
}